using System;
using System.Collections.Generic;

namespace дз_02._03
{

    class MyList<T>
    {
        public T[] list;

        public int Count { get; private set; }

        public MyList()
        {
            list = new T[0];
            Count = 0;
        }

        public T this[int index]
        {
            get { return list[index]; }

            set { list[index] = value; }
        }

        private void ExpandArray()
        {
            T[] tempArray;

            if (Count == 0)
            {
                tempArray = new T[1];
            }
            else
            {
                tempArray = new T[list.Length * 2];
            }

            for (int i = 0; i < list.Length; i++)
            {
                tempArray[i] = list[i];
            }

            list = tempArray;
        }

        public void Add(T item)
        {
            if (list.Length == Count)
            {
                ExpandArray();
            }

            Count++;
            list[Count - 1] = item;
        }

        public int IndexOf(T item)
        {
            int index = -1;
            for (int i = 0; i < Count; i++)
            {
                if (Object.Equals(list[i], item))
                {
                    index = i;
                    break;
                }
            }
            return index;
        }

        public bool Remove(T item)
        {
            if (IndexOf(item) != -1)
            {
                int index = IndexOf(item);
                int count = 0;

                T[] tempArray = new T[list.Length];
                for (int i = 0; i < Count; i++)
                {
                    if (i == index)
                    {
                        continue;
                    }
                    tempArray[count] = list[i];
                    count++;
                }

                list = tempArray;
                Count--;

                return true;
            }
            else return false;
        }

        public void RemoveAt(int index)
        {
            T[] tempArray = new T[Count];

            int count = 0;

            for (int i = 0; i < Count; i++)
            {
                if (i == index)
                {
                    continue;
                }

                tempArray[count] = list[i];
                count++;
            }

            Count--;
            list = tempArray;
        }

        public void Insert(int index, T item)
        {


            T[] tempArray = new T[Count];

            for (int i = 0; i < Count; i++)
            {
                if (i == index)
                {
                    tempArray[i] = item;
                    continue;
                }

                tempArray[i] = list[i];
            }

            list = tempArray;
        }

        public int BinarySearch(T item)
        {
           return BinarySrch(0, Count - 1, item);
        }

        private int BinarySrch(int leftEnd, int rightEnd, T item)
        {
            if ((leftEnd == rightEnd))
                return -1;

            if (Convert.ToInt32(list[rightEnd]) == Convert.ToInt32(item))
            {
                return rightEnd;
            }
            if (Convert.ToInt32(list[rightEnd]) < Convert.ToInt32(item))
            {
                BinarySrch(leftEnd, rightEnd / 2, item);
            }
            if (Convert.ToInt32(list[rightEnd]) > Convert.ToInt32(item))
            {
                BinarySrch(rightEnd / 2, rightEnd, item);
            }

            return 0;
        }

    }

    class Program
    {
        static void Main(string[] args)using System;
using System.Collections.Generic;

namespace дз_02._03
{

    class MyList<T>
    {
        public T[] list;

        public int Count { get; private set; }

        public MyList()
        {
            list = new T[0];
            Count = 0;
        }

        public T this[int index]
        {
            get { return list[index]; }

            set { list[index] = value; }
        }

        private void ExpandArray()
        {
            T[] tempArray;

            if (Count == 0)
            {
                tempArray = new T[1];
            }
            else
            {
                tempArray = new T[list.Length * 2];
            }

            for (int i = 0; i < list.Length; i++)
            {
                tempArray[i] = list[i];
            }

            list = tempArray;
        }

        public void Add(T item)
        {
            if (list.Length == Count)
            {
                ExpandArray();
            }

            Count++;
            list[Count - 1] = item;
        }

        public int IndexOf(T item)
        {
            int index = -1;
            for (int i = 0; i < Count; i++)
            {
                if (Object.Equals(list[i], item))
                {
                    index = i;
                    break;
                }
            }
            return index;
        }

        public bool Remove(T item)
        {
            if (IndexOf(item) != -1)
            {
                int index = IndexOf(item);
                int count = 0;

                T[] tempArray = new T[list.Length];
                for (int i = 0; i < Count; i++)
                {
                    if (i == index)
                    {
                        continue;
                    }
                    tempArray[count] = list[i];
                    count++;
                }

                list = tempArray;
                Count--;

                return true;
            }
            else return false;
        }

        public void RemoveAt(int index)
        {
            T[] tempArray = new T[Count];

            int count = 0;

            for (int i = 0; i < Count; i++)
            {
                if (i == index)
                {
                    continue;
                }

                tempArray[count] = list[i];
                count++;
            }

            Count--;
            list = tempArray;
        }

        public void Insert(int index, T item)
        {


            T[] tempArray = new T[Count];

            for (int i = 0; i < Count; i++)
            {
                if (i == index)
                {
                    tempArray[i] = item;
                    continue;
                }

                tempArray[i] = list[i];
            }

            list = tempArray;
        }

        public int BinarySearch(T item)
        {
           return BinarySrch(0, Count - 1, item);
        }

        private int BinarySrch(int leftEnd, int rightEnd, T item)
        {
            if ((leftEnd == rightEnd))
                return -1;

            if (Convert.ToInt32(list[rightEnd]) == Convert.ToInt32(item))
            {
                return rightEnd;
            }
            if (Convert.ToInt32(list[rightEnd]) < Convert.ToInt32(item))
            {
                BinarySrch(leftEnd, rightEnd / 2, item);
            }
            if (Convert.ToInt32(list[rightEnd]) > Convert.ToInt32(item))
            {
                BinarySrch(rightEnd / 2, rightEnd, item);
            }

            return 0;
        }

    }

    class Program
    {
        static void Main(string[] args)
        {
            MyList<int> list = new MyList<int>();
            for (int i = 0; i <= 50; i++)
                list.Add(i);

            Console.WriteLine(list.BinarySearch(50));

            for (int i = 0; i < list.Count; i++)
            {
                Console.Write(list[i] + " ");
            }

            
        }
    }
}

        {
            MyList<int> list = new MyList<int>();
            for (int i = 0; i <= 50; i++)
                list.Add(i);

            Console.WriteLine(list.BinarySearch(50));

            for (int i = 0; i < list.Count; i++)
            {
                Console.Write(list[i] + " ");
            }

            
        }
    }
}
